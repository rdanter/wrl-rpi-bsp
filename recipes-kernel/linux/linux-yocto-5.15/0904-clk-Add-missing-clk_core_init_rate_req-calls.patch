From 0598f7ac36eccbf4b2d214edd4bb11c8b12a9986 Mon Sep 17 00:00:00 2001
From: Maxime Ripard <maxime@cerno.tech>
Date: Sat, 2 Apr 2022 14:01:37 +0200
Subject: [PATCH] clk: Add missing clk_core_init_rate_req calls

Some callers of clk_core_round_rate_nolock() will initialize the
clk_rate_request structure by hand, missing a few parameters that leads
to inconsistencies in what drivers can expect from that structure.

Let's use clk_core_init_rate_req() everywhere to make sure it's built in
a consistent manner.

Tested-by: Alexander Stein <alexander.stein@ew.tq-group.com> # imx8mp
Tested-by: Marek Szyprowski <m.szyprowski@samsung.com> # exynos4210, meson g12b
Signed-off-by: Maxime Ripard <maxime@cerno.tech>
---
 drivers/clk/clk.c | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/drivers/clk/clk.c b/drivers/clk/clk.c
index ca978500782f..890834d0bbdb 100644
--- a/drivers/clk/clk.c
+++ b/drivers/clk/clk.c
@@ -1488,7 +1488,7 @@ unsigned long clk_hw_round_rate(struct clk_hw *hw, unsigned long rate)
 	struct clk_rate_request req;
 	struct clk_request *clk_req;
 
-	req.rate = rate;
+	clk_core_init_rate_req(hw->core, &req, rate);
 
 	list_for_each_entry(clk_req, &hw->core->pending_requests, list)
 		req.min_rate = max(clk_req->rate, req.min_rate);
@@ -1524,7 +1524,7 @@ long clk_round_rate(struct clk *clk, unsigned long rate)
 	if (clk->exclusive_count)
 		clk_core_rate_unprotect(clk->core);
 
-	req.rate = rate;
+	clk_core_init_rate_req(clk->core, &req, rate);
 
 	list_for_each_entry(clk_req, &clk->core->pending_requests, list)
 		req.min_rate = max(clk_req->rate, req.min_rate);
@@ -2236,8 +2236,7 @@ static unsigned long clk_core_req_round_rate_nolock(struct clk_core *core,
 	if (cnt < 0)
 		return cnt;
 
-	clk_core_get_boundaries(core, &req.min_rate, &req.max_rate);
-	req.rate = req_rate;
+	clk_core_init_rate_req(core, &req, req_rate);
 
 	list_for_each_entry(clk_req, &core->pending_requests, list)
 		req.min_rate = max(clk_req->rate, req.min_rate);
-- 
2.32.0

