From aff8e58eb768345ab93cb3d0a667ae16c2972d12 Mon Sep 17 00:00:00 2001
From: Naushir Patuck <naush@raspberrypi.com>
Date: Fri, 20 May 2022 09:55:42 +0100
Subject: [PATCH] media: imx296: Add standby and stream on/off delays

Add a 1.5ms delay after coming out of standby.
Add a 2ms delay after going into or coming out of streaming state.

All delay values have been deduced from the sensor datasheet.

Signed-off-by: Naushir Patuck <naush@raspberrypi.com>
---
 drivers/media/i2c/imx296.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/drivers/media/i2c/imx296.c b/drivers/media/i2c/imx296.c
index 33944155a6ce..c0da6f841d8f 100644
--- a/drivers/media/i2c/imx296.c
+++ b/drivers/media/i2c/imx296.c
@@ -171,6 +171,10 @@
 #define IMX296_GTTABLENUM				IMX296_REG_8BIT(0x4114)
 #define IMX296_CTRL418C					IMX296_REG_8BIT(0x418c)
 
+#define IMX296_STANDBY_DELAY		1500
+#define IMX296_STREAM_ON_DELAY		2000
+#define IMX296_STREAM_OFF_DELAY		2000
+
 struct imx296_clk_params {
 	unsigned int freq;
 	u8 incksel[4];
@@ -528,7 +532,7 @@ static int imx296_stream_on(struct imx296 *sensor)
 	int ret = 0;
 
 	imx296_write(sensor, IMX296_CTRL00, 0, &ret);
-	usleep_range(2000, 5000);
+	usleep_range(IMX296_STREAM_ON_DELAY, 2*IMX296_STREAM_ON_DELAY);
 	imx296_write(sensor, IMX296_CTRL0A, 0, &ret);
 
 	return ret;
@@ -539,6 +543,7 @@ static int imx296_stream_off(struct imx296 *sensor)
 	int ret = 0;
 
 	imx296_write(sensor, IMX296_CTRL0A, IMX296_CTRL0A_XMSTA, &ret);
+	usleep_range(IMX296_STREAM_OFF_DELAY, 2*IMX296_STREAM_OFF_DELAY);
 	imx296_write(sensor, IMX296_CTRL00, IMX296_CTRL00_STANDBY, &ret);
 
 	return ret;
@@ -970,6 +975,8 @@ static int imx296_identify_model(struct imx296 *sensor)
 		return ret;
 	}
 
+	usleep_range(IMX296_STANDBY_DELAY, 2*IMX296_STANDBY_DELAY);
+
 	ret = imx296_read(sensor, IMX296_SENSOR_INFO);
 	if (ret < 0) {
 		dev_err(sensor->dev, "failed to read sensor information (%d)\n",
-- 
2.32.0

