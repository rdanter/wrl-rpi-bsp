From dd896a27ac30a88c881435f70d904131835100f5 Mon Sep 17 00:00:00 2001
From: Stefan Wahren <wahrenst@gmx.net>
Date: Fri, 20 Sep 2019 07:25:38 +0200
Subject: [PATCH 553/587] Revert "HACK: clk-bcm2835: Add BCM2838_CLOCK_EMMC2
 support"

This reverts commit 1ac954a8c5dd939dffd3b256be50253082297d9a
to apply the much better upstream solution afterwards.

Signed-off-by: Stefan Wahren <wahrenst@gmx.net>
---
 arch/arm/boot/dts/bcm2838.dtsi      |  1 -
 drivers/clk/bcm/clk-bcm2835.c       | 20 ++------------------
 include/dt-bindings/clock/bcm2835.h |  2 --
 3 files changed, 2 insertions(+), 21 deletions(-)

diff --git a/arch/arm/boot/dts/bcm2838.dtsi b/arch/arm/boot/dts/bcm2838.dtsi
index d845341053ff..c003cb9a6178 100644
--- a/arch/arm/boot/dts/bcm2838.dtsi
+++ b/arch/arm/boot/dts/bcm2838.dtsi
@@ -210,7 +210,6 @@
 			compatible = "brcm,bcm2711-emmc2";
 			status = "okay";
 			interrupts = <GIC_SPI 126 IRQ_TYPE_LEVEL_HIGH>;
-			clocks = <&clocks BCM2838_CLOCK_EMMC2>;
 			reg = <0x7e340000 0x100>;
 		};
 
diff --git a/drivers/clk/bcm/clk-bcm2835.c b/drivers/clk/bcm/clk-bcm2835.c
index b37959a9dd2d..1d84487ff721 100644
--- a/drivers/clk/bcm/clk-bcm2835.c
+++ b/drivers/clk/bcm/clk-bcm2835.c
@@ -115,8 +115,6 @@
 #define CM_AVEODIV		0x1bc
 #define CM_EMMCCTL		0x1c0
 #define CM_EMMCDIV		0x1c4
-#define CM_EMMC2CTL		0x1d0
-#define CM_EMMC2DIV		0x1d4
 
 /* General bits for the CM_*CTL regs */
 # define CM_ENABLE			BIT(4)
@@ -2040,15 +2038,6 @@ static const struct bcm2835_clk_desc clk_desc_array[] = {
 		.frac_bits = 8,
 		.tcnt_mux = 39),
 
-	/* EMMC2 clock (only available for BCM2838) */
-	[BCM2838_CLOCK_EMMC2]	= REGISTER_PER_CLK(
-		.name = "emmc2",
-		.ctl_reg = CM_EMMC2CTL,
-		.div_reg = CM_EMMC2DIV,
-		.int_bits = 4,
-		.frac_bits = 8,
-		.tcnt_mux = 42),
-
 	/* General purpose (GPIO) clocks */
 	[BCM2835_CLOCK_GP0]	= REGISTER_PER_CLK(
 		.name = "gp0",
@@ -2278,12 +2267,8 @@ static int bcm2835_clk_probe(struct platform_device *pdev)
 
 	for (i = 0; i < asize; i++) {
 		desc = &clk_desc_array[i];
-		if (desc->clk_register && desc->data) {
-			if ((i != BCM2838_CLOCK_EMMC2) ||
-			    of_device_is_compatible(fw_node, "brcm,bcm2838-cprman")) {
-				hws[i] = desc->clk_register(cprman, desc->data);
-			}
-		}
+		if (desc->clk_register && desc->data)
+			hws[i] = desc->clk_register(cprman, desc->data);
 	}
 
 	ret = bcm2835_mark_sdc_parent_critical(hws[BCM2835_CLOCK_SDRAM]->clk);
@@ -2303,7 +2288,6 @@ static int bcm2835_clk_probe(struct platform_device *pdev)
 
 static const struct of_device_id bcm2835_clk_of_match[] = {
 	{ .compatible = "brcm,bcm2835-cprman", },
-	{ .compatible = "brcm,bcm2838-cprman", },
 	{}
 };
 MODULE_DEVICE_TABLE(of, bcm2835_clk_of_match);
diff --git a/include/dt-bindings/clock/bcm2835.h b/include/dt-bindings/clock/bcm2835.h
index d73acd854f84..2cec01f96897 100644
--- a/include/dt-bindings/clock/bcm2835.h
+++ b/include/dt-bindings/clock/bcm2835.h
@@ -58,5 +58,3 @@
 #define BCM2835_CLOCK_DSI1E		48
 #define BCM2835_CLOCK_DSI0P		49
 #define BCM2835_CLOCK_DSI1P		50
-
-#define BCM2838_CLOCK_EMMC2		51
-- 
2.17.1

