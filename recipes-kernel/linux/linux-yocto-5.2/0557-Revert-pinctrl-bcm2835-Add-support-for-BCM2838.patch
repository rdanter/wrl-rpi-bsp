From 3e84d0211382ccd5b56a4ac445e1ff2458a8a807 Mon Sep 17 00:00:00 2001
From: Stefan Wahren <wahrenst@gmx.net>
Date: Tue, 24 Sep 2019 21:37:17 +0200
Subject: [PATCH 557/587] Revert "pinctrl-bcm2835: Add support for BCM2838"

This reverts commit abcfd092860760087b87acbdda0963fe7906839c, so we can
apply all upstream pinctrl changes.

Signed-off-by: Stefan Wahren <wahrenst@gmx.net>
---
 drivers/pinctrl/bcm/pinctrl-bcm2835.c | 58 +++++++--------------------
 1 file changed, 14 insertions(+), 44 deletions(-)

diff --git a/drivers/pinctrl/bcm/pinctrl-bcm2835.c b/drivers/pinctrl/bcm/pinctrl-bcm2835.c
index 01d69ea87a17..cb718971829d 100644
--- a/drivers/pinctrl/bcm/pinctrl-bcm2835.c
+++ b/drivers/pinctrl/bcm/pinctrl-bcm2835.c
@@ -58,12 +58,6 @@
 #define GPPUD		0x94	/* Pin Pull-up/down Enable */
 #define GPPUDCLK0	0x98	/* Pin Pull-up/down Enable Clock */
 
-/* 2711 has a different mechanism for pin pull-up/down/enable  */
-#define GPPUPPDN0		0xe4	/* Pin pull-up/down for pins 15:0  */
-#define GPPUPPDN1		0xe8	/* Pin pull-up/down for pins 31:16 */
-#define GPPUPPDN2		0xec	/* Pin pull-up/down for pins 47:32 */
-#define GPPUPPDN3		0xf0	/* Pin pull-up/down for pins 57:48 */
-
 #define FSEL_REG(p)		(GPFSEL0 + (((p) / 10) * 4))
 #define FSEL_SHIFT(p)		(((p) % 10) * 3)
 #define GPIO_REG_OFFSET(p)	((p) / 32)
@@ -913,45 +907,21 @@ static void bcm2835_pull_config_set(struct bcm2835_pinctrl *pc,
 		unsigned int pin, unsigned int arg)
 {
 	u32 off, bit;
-	/* BCM2835, BCM2836 & BCM2837 return 'gpio' for this unused register */
-	int is_2835 = bcm2835_gpio_rd(pc, GPPUPPDN3) == 0x6770696f;
 
-        if (is_2835) {
-		off = GPIO_REG_OFFSET(pin);
-		bit = GPIO_REG_SHIFT(pin);
-		/*
-		 * BCM2835 datasheet say to wait 150 cycles, but not of what.
-		 * But the VideoCore firmware delay for this operation
-		 * based nearly on the same amount of VPU cycles and this clock
-		 * runs at 250 MHz.
-		 */
-		bcm2835_gpio_wr(pc, GPPUD, arg & 3);
-		udelay(1);
-		bcm2835_gpio_wr(pc, GPPUDCLK0 + (off * 4), BIT(bit));
-		udelay(1);
-		bcm2835_gpio_wr(pc, GPPUDCLK0 + (off * 4), 0);
-	} else {
-		u32 reg;
-		int lsb;
-
-		off = (pin >> 4);
-		if (off > 3)
-			return;
-		lsb = (pin & 0xf) << 1;
-
-		/* The up/down semantics are reversed compared to BCM2835.
-		 * Instead of updating all the device tree files, translate the
-		 * values here.
-		 */
-		if (arg == 2)
-			arg = 1;
-		else if (arg == 1)
-			arg = 2;
-		reg = bcm2835_gpio_rd(pc, GPPUPPDN0 + (off *4));
-		reg &= ~(0x3 << lsb);
-		reg |= (arg & 3) << lsb;
-		bcm2835_gpio_wr(pc, GPPUPPDN0 + (off * 4), reg);
-	}
+	off = GPIO_REG_OFFSET(pin);
+	bit = GPIO_REG_SHIFT(pin);
+
+	bcm2835_gpio_wr(pc, GPPUD, arg & 3);
+	/*
+	 * BCM2835 datasheet say to wait 150 cycles, but not of what.
+	 * But the VideoCore firmware delay for this operation
+	 * based nearly on the same amount of VPU cycles and this clock
+	 * runs at 250 MHz.
+	 */
+	udelay(1);
+	bcm2835_gpio_wr(pc, GPPUDCLK0 + (off * 4), BIT(bit));
+	udelay(1);
+	bcm2835_gpio_wr(pc, GPPUDCLK0 + (off * 4), 0);
 }
 
 static int bcm2835_pinconf_set(struct pinctrl_dev *pctldev,
-- 
2.17.1

