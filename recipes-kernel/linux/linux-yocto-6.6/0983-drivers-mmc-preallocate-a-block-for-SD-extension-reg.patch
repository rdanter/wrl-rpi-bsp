From d8748eda96b47efea833e2a6ea478bb370654f1d Mon Sep 17 00:00:00 2001
From: Jonathan Bell <jonathan@raspberrypi.com>
Date: Wed, 20 Mar 2024 13:00:30 +0000
Subject: [PATCH] drivers: mmc: preallocate a block for SD extension register
 accesses

The Performance Extension register is regularly accessed in a hot path
to do write cache flushes. Don't invoke kmalloc/kfree for every access,
preallocate a 512B buffer for this purpose.

Also remove an unused alloc in sd_enable_cache().

Signed-off-by: Jonathan Bell <jonathan@raspberrypi.com>
---
 drivers/mmc/core/bus.c   |  2 ++
 drivers/mmc/core/sd.c    | 34 +++++++++++-----------------------
 include/linux/mmc/card.h |  1 +
 3 files changed, 14 insertions(+), 23 deletions(-)

diff --git a/drivers/mmc/core/bus.c b/drivers/mmc/core/bus.c
index 0af96548e7da..ee6c0fdbb3e9 100644
--- a/drivers/mmc/core/bus.c
+++ b/drivers/mmc/core/bus.c
@@ -264,6 +264,8 @@ static void mmc_release_card(struct device *dev)
 
 	sdio_free_common_cis(card);
 
+	kfree(card->ext_reg_buf);
+
 	kfree(card->info);
 
 	kfree(card);
diff --git a/drivers/mmc/core/sd.c b/drivers/mmc/core/sd.c
index 283dbf566559..d7587a03a4b5 100644
--- a/drivers/mmc/core/sd.c
+++ b/drivers/mmc/core/sd.c
@@ -1025,9 +1025,8 @@ int sd_write_ext_reg(struct mmc_card *card, u8 fno, u8 page, u16 offset,
 	struct scatterlist sg;
 	u8 *reg_buf;
 
-	reg_buf = kzalloc(512, GFP_KERNEL);
-	if (!reg_buf)
-		return -ENOMEM;
+	reg_buf = card->ext_reg_buf;
+	memset(reg_buf, 0, 512);
 
 	mrq.cmd = &cmd;
 	mrq.data = &data;
@@ -1059,8 +1058,6 @@ int sd_write_ext_reg(struct mmc_card *card, u8 fno, u8 page, u16 offset,
 	mmc_set_data_timeout(&data, card);
 	mmc_wait_for_req(host, &mrq);
 
-	kfree(reg_buf);
-
 	/*
 	 * Note that, the SD card is allowed to signal busy on DAT0 up to 1s
 	 * after the CMD49. Although, let's leave this to be managed by the
@@ -1101,9 +1098,7 @@ static int sd_parse_ext_reg_power(struct mmc_card *card, u8 fno, u8 page,
 	int err;
 	u8 *reg_buf;
 
-	reg_buf = kzalloc(512, GFP_KERNEL);
-	if (!reg_buf)
-		return -ENOMEM;
+	reg_buf = card->ext_reg_buf;
 
 	/* Read the extension register for power management function. */
 	err = sd_read_ext_reg(card, fno, page, offset, 512, reg_buf);
@@ -1133,7 +1128,6 @@ static int sd_parse_ext_reg_power(struct mmc_card *card, u8 fno, u8 page,
 	card->ext_power.offset = offset;
 
 out:
-	kfree(reg_buf);
 	return err;
 }
 
@@ -1143,9 +1137,7 @@ static int sd_parse_ext_reg_perf(struct mmc_card *card, u8 fno, u8 page,
 	int err;
 	u8 *reg_buf;
 
-	reg_buf = kzalloc(512, GFP_KERNEL);
-	if (!reg_buf)
-		return -ENOMEM;
+	reg_buf = card->ext_reg_buf;
 
 	err = sd_read_ext_reg(card, fno, page, offset, 512, reg_buf);
 	if (err) {
@@ -1188,7 +1180,6 @@ static int sd_parse_ext_reg_perf(struct mmc_card *card, u8 fno, u8 page,
 	card->ext_perf.offset = offset;
 
 out:
-	kfree(reg_buf);
 	return err;
 }
 
@@ -1259,6 +1250,12 @@ static int sd_read_ext_regs(struct mmc_card *card)
 	if (!gen_info_buf)
 		return -ENOMEM;
 
+	card->ext_reg_buf = kzalloc(512, GFP_KERNEL);
+	if (!card->ext_reg_buf) {
+		err = -ENOMEM;
+		goto out;
+	}
+
 	/*
 	 * Read 512 bytes of general info, which is found at function number 0,
 	 * at page 0 and with no offset.
@@ -1325,9 +1322,7 @@ static int sd_flush_cache(struct mmc_host *host)
 	if (!sd_cache_enabled(host))
 		return 0;
 
-	reg_buf = kzalloc(512, GFP_KERNEL);
-	if (!reg_buf)
-		return -ENOMEM;
+	reg_buf = card->ext_reg_buf;
 
 	/*
 	 * Set Flush Cache at bit 0 in the performance enhancement register at
@@ -1363,21 +1358,15 @@ static int sd_flush_cache(struct mmc_host *host)
 	if (reg_buf[0] & BIT(0))
 		err = -ETIMEDOUT;
 out:
-	kfree(reg_buf);
 	return err;
 }
 
 static int sd_enable_cache(struct mmc_card *card)
 {
-	u8 *reg_buf;
 	int err;
 
 	card->ext_perf.feature_enabled &= ~SD_EXT_PERF_CACHE;
 
-	reg_buf = kzalloc(512, GFP_KERNEL);
-	if (!reg_buf)
-		return -ENOMEM;
-
 	/*
 	 * Set Cache Enable at bit 0 in the performance enhancement register at
 	 * 260 bytes offset.
@@ -1396,7 +1385,6 @@ static int sd_enable_cache(struct mmc_card *card)
 		card->ext_perf.feature_enabled |= SD_EXT_PERF_CACHE;
 
 out:
-	kfree(reg_buf);
 	return err;
 }
 
diff --git a/include/linux/mmc/card.h b/include/linux/mmc/card.h
index 962b3f4b3d7d..26797067c731 100644
--- a/include/linux/mmc/card.h
+++ b/include/linux/mmc/card.h
@@ -320,6 +320,7 @@ struct mmc_card {
 	struct sd_switch_caps	sw_caps;	/* switch (CMD6) caps */
 	struct sd_ext_reg	ext_power;	/* SD extension reg for PM */
 	struct sd_ext_reg	ext_perf;	/* SD extension reg for PERF */
+	u8			*ext_reg_buf;	/* 512 byte block for extension register R/W */
 
 	unsigned int		sdio_funcs;	/* number of SDIO functions */
 	atomic_t		sdio_funcs_probed; /* number of probed SDIO funcs */
-- 
2.34.1

