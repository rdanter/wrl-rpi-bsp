From 1c4c90982462eda4c3f700549ad8ce1da4a9d36e Mon Sep 17 00:00:00 2001
From: Jonathan Bell <jonathan@raspberrypi.com>
Date: Fri, 19 Jul 2024 16:34:59 +0100
Subject: [PATCH] Revert "spi: dw-dma: Get the last DMA scoop out of the FIFO"

This issue was due to a misconfiguration of the RP1 DMAC due to hardware
limitations, not the SPI driver (which was using the incorrect reported
maximum burst size to set the FIFO threshold).

This reverts commit 6aab06ff9f81e186b1a02b53b514e691472e5a61.

Signed-off-by: Jonathan Bell <jonathan@raspberrypi.com>
---
 drivers/spi/spi-dw-dma.c | 6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)

diff --git a/drivers/spi/spi-dw-dma.c b/drivers/spi/spi-dw-dma.c
index 6c28dc97cb98..93729275c63c 100644
--- a/drivers/spi/spi-dw-dma.c
+++ b/drivers/spi/spi-dw-dma.c
@@ -316,10 +316,8 @@ static void dw_spi_dma_tx_done(void *arg)
 	struct dw_spi *dws = arg;
 
 	clear_bit(DW_SPI_TX_BUSY, &dws->dma_chan_busy);
-	if (test_bit(DW_SPI_RX_BUSY, &dws->dma_chan_busy)) {
-		dw_writel(dws, DW_SPI_DMARDLR, 0);
+	if (test_bit(DW_SPI_RX_BUSY, &dws->dma_chan_busy))
 		return;
-	}
 
 	complete(&dws->dma_completion);
 }
@@ -657,8 +655,6 @@ static int dw_spi_dma_transfer(struct dw_spi *dws, struct spi_transfer *xfer)
 
 	nents = max(xfer->tx_sg.nents, xfer->rx_sg.nents);
 
-	dw_writel(dws, DW_SPI_DMARDLR, xfer->tx_buf ? (dws->rxburst - 1) : 0);
-
 	/*
 	 * Execute normal DMA-based transfer (which submits the Rx and Tx SG
 	 * lists directly to the DMA engine at once) if either full hardware
-- 
2.34.1

