From c843bf12cb86bfe349e8975daf5d4f372ec6fc0a Mon Sep 17 00:00:00 2001
From: Richard Danter <radanter@gmail.com>
Date: Mon, 9 May 2022 15:23:55 +0000
Subject: [PATCH 2/2] Revert "firmware: raspberrypi: Keep count of all
 consumers"

This reverts commit 60831f5ae6c713afceb6d29f40899ed112f36059.
---
 drivers/firmware/raspberrypi.c             | 40 ++--------------------
 include/soc/bcm2835/raspberrypi-firmware.h |  2 --
 2 files changed, 3 insertions(+), 39 deletions(-)

diff --git a/drivers/firmware/raspberrypi.c b/drivers/firmware/raspberrypi.c
index 8996deadd79b..2371d08bdd17 100644
--- a/drivers/firmware/raspberrypi.c
+++ b/drivers/firmware/raspberrypi.c
@@ -7,7 +7,6 @@
  */
 
 #include <linux/dma-mapping.h>
-#include <linux/kref.h>
 #include <linux/mailbox_client.h>
 #include <linux/module.h>
 #include <linux/of_platform.h>
@@ -28,8 +27,6 @@ struct rpi_firmware {
 	struct mbox_chan *chan; /* The property channel. */
 	struct completion c;
 	u32 enabled;
-
-	struct kref consumers;
 };
 
 static DEFINE_MUTEX(transaction_lock);
@@ -228,31 +225,12 @@ static void rpi_register_clk_driver(struct device *dev)
 						-1, NULL, 0);
 }
 
-static void rpi_firmware_delete(struct kref *kref)
-{
-	struct rpi_firmware *fw = container_of(kref, struct rpi_firmware,
-					       consumers);
-
-	mbox_free_channel(fw->chan);
-	kfree(fw);
-}
-
-void rpi_firmware_put(struct rpi_firmware *fw)
-{
-	kref_put(&fw->consumers, rpi_firmware_delete);
-}
-EXPORT_SYMBOL_GPL(rpi_firmware_put);
-
 static int rpi_firmware_probe(struct platform_device *pdev)
 {
 	struct device *dev = &pdev->dev;
 	struct rpi_firmware *fw;
 
-	/*
-	 * Memory will be freed by rpi_firmware_delete() once all users have
-	 * released their firmware handles. Don't use devm_kzalloc() here.
-	 */
-	fw = kzalloc(sizeof(*fw), GFP_KERNEL);
+	fw = devm_kzalloc(dev, sizeof(*fw), GFP_KERNEL);
 	if (!fw)
 		return -ENOMEM;
 
@@ -269,7 +247,6 @@ static int rpi_firmware_probe(struct platform_device *pdev)
 	}
 
 	init_completion(&fw->c);
-	kref_init(&fw->consumers);
 
 	platform_set_drvdata(pdev, fw);
 
@@ -298,8 +275,7 @@ static int rpi_firmware_remove(struct platform_device *pdev)
 	rpi_hwmon = NULL;
 	platform_device_unregister(rpi_clk);
 	rpi_clk = NULL;
-
-	rpi_firmware_put(fw);
+	mbox_free_channel(fw->chan);
 
 	return 0;
 }
@@ -308,26 +284,16 @@ static int rpi_firmware_remove(struct platform_device *pdev)
  * rpi_firmware_get - Get pointer to rpi_firmware structure.
  * @firmware_node:    Pointer to the firmware Device Tree node.
  *
- * The reference to rpi_firmware has to be released with rpi_firmware_put().
- *
  * Returns NULL is the firmware device is not ready.
  */
 struct rpi_firmware *rpi_firmware_get(struct device_node *firmware_node)
 {
 	struct platform_device *pdev = of_find_device_by_node(firmware_node);
-	struct rpi_firmware *fw;
 
 	if (!pdev)
 		return NULL;
 
-	fw = platform_get_drvdata(pdev);
-	if (!fw)
-		return NULL;
-
-	if (!kref_get_unless_zero(&fw->consumers))
-		return NULL;
-
-	return fw;
+	return platform_get_drvdata(pdev);
 }
 EXPORT_SYMBOL_GPL(rpi_firmware_get);
 
diff --git a/include/soc/bcm2835/raspberrypi-firmware.h b/include/soc/bcm2835/raspberrypi-firmware.h
index bc3829dfcc33..16253b6875c9 100644
--- a/include/soc/bcm2835/raspberrypi-firmware.h
+++ b/include/soc/bcm2835/raspberrypi-firmware.h
@@ -156,7 +156,6 @@ int rpi_firmware_property(struct rpi_firmware *fw,
 			  u32 tag, void *data, size_t len);
 int rpi_firmware_property_list(struct rpi_firmware *fw,
 			       void *data, size_t tag_size);
-void rpi_firmware_put(struct rpi_firmware *fw);
 struct rpi_firmware *rpi_firmware_get(struct device_node *firmware_node);
 #else
 static inline int rpi_firmware_property(struct rpi_firmware *fw, u32 tag,
@@ -171,7 +170,6 @@ static inline int rpi_firmware_property_list(struct rpi_firmware *fw,
 	return -ENOSYS;
 }
 
-static inline void rpi_firmware_put(struct rpi_firmware *fw) { }
 static inline struct rpi_firmware *rpi_firmware_get(struct device_node *firmware_node)
 {
 	return NULL;
-- 
2.31.1

